service: api

plugins:
  - serverless-s3-local
  - s3-example-content
  - serverless-offline

provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  region: eu-central-1
  memorySize: 128
  timeout: 10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"
  environment:
    BUCKET_MARKDOWN: ${self:custom.bucketmarkdown}
    REGION: ${self:provider.region}

package:
  exclude:
    - .*
    - src/package.json
    - node_modules/**
    - src/package.json
    - node_modules/**
    - test/**
    - circle.yml
    - package.json
    - README.md

custom:
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:custom.stage}-${self:service}

  bucketmarkdown: ${self:custom.prefix}-markdown

  s3:
    port: 8000
    buckets:
      - ${self:custom.bucketmarkdown}
    directory: /tmp

functions:
  fetch:
      handler: src/functions/fetch.handler
      name: ${self:custom.prefix}-fetch
      events:
        - http:
            path: users/{user}/vellums/{vellum}
            method: get

resources:
  Resources:
    bucketmarkdown:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: ${self:custom.bucketmarkdown}
    ApiGatewayMethodUsersUserVarVellumsVellumVarGet:
      Properties:
        AuthorizationType: AWS_IAM